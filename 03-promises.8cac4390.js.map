{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SACpCC,QAAQC,IAAIJ,GAEZ,MAAMK,EAAQJ,SAASC,cAAc,kBAC/BI,EAAOL,SAASC,cAAc,iBAC9BK,EAASN,SAASC,cAAc,mBAWtC,SAASM,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAlBbV,EAAKmB,iBAAiB,UAsBtB,SAAyBC,GACvBA,EAAGC,iBACH,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOjB,EAAKkB,OACxBE,EAAcH,OAAOhB,EAAOiB,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAErCL,GAAcG,EACdjB,EAAcmB,EAAGL,GACdM,MAAK,EAACnB,SAAEA,EAAUS,MAAAW,MACjBC,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBvB,QAAiBoB,MAAU,IAGnDI,OAAM,EAACxB,SAAEA,EAAUS,MAAAgB,MAClBJ,EAAAhC,GAASiC,OAAOI,QACd,sBAAoB1B,QAAeyB,MAAU,G,IArCvDlC,EAAKoC,MAAMC,QAAU,OACrBrC,EAAKoC,MAAME,IAAM,OACjBtC,EAAKoC,MAAMG,cAAgB,SAC3BvC,EAAKoC,MAAMI,WAAa,SAExBvC,SAASwC,KAAKL,MAAMM,gBAAkB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconsole.log(form);\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', onPromiseCreate);\n\nform.style.display = 'flex';\nform.style.gap = '40px';\nform.style.flexDirection = 'column';\nform.style.alignItems = 'center';\n\ndocument.body.style.backgroundColor = 'green';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(ev) {\n  ev.preventDefault();\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    // let promiseDelay = delayValue + stepValue * i;\n    delayValue += stepValue;\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","console","log","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","ev","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","style","display","gap","flexDirection","alignItems","body","backgroundColor"],"version":3,"file":"03-promises.8cac4390.js.map"}